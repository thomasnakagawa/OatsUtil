name: Create Unity Package

on: push

env:
  ASSET_DIR: Assets/OatsUtil
  ASSET_NAME: OatsUtil  

jobs:
  echo:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      
    - name: Make metalist
      run: |
        echo "$ASSET_DIR.meta" > metaList
        find ./$ASSET_DIR/ -name \*.meta >> metaList

    - name: Make build directory
      run: mkdir packageBuild

    - name: Build asset package
      uses: pCYSl5EDgo/create-unitypackage@master
      with:
        package-path: packageBuild/${{ env.ASSET_NAME }}.unitypackage
        include-files: metaList

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        path: packageBuild
        name: ${{ env.ASSET_NAME }}_package
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./packageBuild/${{ env.ASSET_NAME }}.unitypackage
        asset_name: my-artifact.unitypackage
        asset_content_type: application/zip
